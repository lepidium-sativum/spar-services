"""Initial Migration

Revision ID: b8e99b3729b4
Revises: 
Create Date: 2025-02-21 11:22:02.386695

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = "b8e99b3729b4"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "bgscene",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("last_edited", sa.DateTime(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=True),
        sa.Column("ue_scene_id", sa.String(length=60), nullable=True),
        sa.Column("background_image", sa.JSON(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__bgscene")),
    )
    op.create_table(
        "client",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("last_edited", sa.DateTime(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("company", sa.String(length=100), nullable=True),
        sa.Column("domain", sa.String(length=255), nullable=True),
        sa.Column("description", sa.String(length=255), nullable=True),
        sa.Column("email", sa.String(length=100), nullable=True),
        sa.Column("site_url", sa.String(length=255), nullable=True),
        sa.Column("locations", sa.JSON(), nullable=True),
        sa.Column("raw_files", sa.JSON(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__client")),
        sa.UniqueConstraint("name", name=op.f("uq__client__name")),
    )
    op.create_table(
        "llminstance",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("last_edited", sa.DateTime(), nullable=False),
        sa.Column("provider", sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
        sa.Column("region", sqlmodel.sql.sqltypes.AutoString(length=15), nullable=False),
        sa.Column("logs", sqlmodel.sql.sqltypes.AutoString(length=100000), nullable=True),
        sa.Column("server_public_ip", sqlmodel.sql.sqltypes.AutoString(length=15), nullable=True),
        sa.Column(
            "status",
            sa.Enum(
                "TO_START",
                "STARTING",
                "READY",
                "TERMINATING",
                "TERMINATED",
                "TERMINATION_FAILED",
                "FAILED",
                "INVALID",
                name="llminstancestatus",
            ),
            nullable=False,
        ),
        sa.Column("server_name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("azure_subscription_id", sa.String(length=250), nullable=True),
        sa.Column("azure_vm_name", sa.String(length=250), nullable=True),
        sa.Column("azure_resource_group", sa.String(length=250), nullable=True),
        sa.Column("azure_tenant", sa.String(length=250), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__llminstance")),
    )
    op.create_table(
        "metahuman",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("last_edited", sa.DateTime(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("gender", sa.String(length=10), nullable=True),
        sa.Column("age", sa.Integer(), nullable=False),
        sa.Column("race", sa.String(length=30), nullable=True),
        sa.Column("url", sa.String(length=1000), nullable=True),
        sa.Column("ue_mh_id", sa.String(length=60), nullable=True),
        sa.Column("image_id", sa.UUID(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__metahuman")),
        sa.UniqueConstraint("name", name=op.f("uq__metahuman__name")),
    )
    op.create_table(
        "personality",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("last_edited", sa.DateTime(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("description", sa.String(length=500), nullable=True),
        sa.Column("personality_info", sa.String(length=500), nullable=True),
        sa.Column("instructions", sa.String(length=500), nullable=True),
        sa.Column("llm", sa.JSON(), nullable=True),
        sa.Column("tts", sa.JSON(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__personality")),
        sa.UniqueConstraint("name", name=op.f("uq__personality__name")),
    )
    op.create_table(
        "ueinstance",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("last_edited", sa.DateTime(), nullable=False),
        sa.Column("provider", sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
        sa.Column("region", sqlmodel.sql.sqltypes.AutoString(length=15), nullable=False),
        sa.Column("logs", sqlmodel.sql.sqltypes.AutoString(length=100000), nullable=True),
        sa.Column("server_public_ip", sqlmodel.sql.sqltypes.AutoString(length=15), nullable=True),
        sa.Column(
            "status",
            sa.Enum(
                "TO_ACQUIRE",
                "CREATING",
                "AVAILABLE",
                "STARTING",
                "STARTED",
                "STARTING_APP",
                "READY",
                "IN_USE",
                "STOPPING_APP",
                "STOPPING",
                "TERMINATING",
                "TERMINATED",
                "TERMINATION_FAILED",
                "FAILED",
                "INVALID",
                name="ueinstancestatus",
            ),
            nullable=False,
        ),
        sa.Column("server_name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("server_instance_id", sa.String(length=55), nullable=True),
        sa.Column("coturn_alb_domain", sa.String(length=300), nullable=True),
        sa.Column("pixel_streaming_port", sa.Integer(), nullable=True),
        sa.Column("coturn_service_alb_dns", sa.String(length=300), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__ueinstance")),
    )
    op.create_table(
        "aiavatar",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("last_edited", sa.DateTime(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=True),
        sa.Column("lang", sa.String(length=6), nullable=True),
        sa.Column("metahuman_id", sa.Integer(), nullable=True),
        sa.Column("bgscene_id", sa.Integer(), nullable=True),
        sa.Column("personality_id", sa.Integer(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["bgscene_id"], ["bgscene.id"], name=op.f("fk__aiavatar__bgscene_id__bgscene")),
        sa.ForeignKeyConstraint(["metahuman_id"], ["metahuman.id"], name=op.f("fk__aiavatar__metahuman_id__metahuman")),
        sa.ForeignKeyConstraint(
            ["personality_id"], ["personality.id"], name=op.f("fk__aiavatar__personality_id__personality")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__aiavatar")),
    )
    op.create_table(
        "user",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("last_edited", sa.DateTime(), nullable=False),
        sa.Column("username", sa.String(length=55), nullable=False),
        sa.Column("first_name", sa.String(length=35), nullable=True),
        sa.Column("last_name", sa.String(length=35), nullable=True),
        sa.Column("email", sa.String(length=100), nullable=False),
        sa.Column("lang", sa.String(length=6), nullable=True),
        sa.Column("disabled", sa.Boolean(), nullable=True),
        sa.Column("client_id", sa.Integer(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("hashed_password", sa.String(length=60), nullable=False),
        sa.Column("role", sa.Enum("superadmin", "admin", "manager", "user", name="userrole"), nullable=False),
        sa.ForeignKeyConstraint(["client_id"], ["client.id"], name=op.f("fk__user__client_id__client")),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__user")),
        sa.UniqueConstraint("email", name=op.f("uq__user__email")),
    )
    op.create_index(op.f("ix__user__username"), "user", ["username"], unique=True)
    op.create_table(
        "module",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("last_edited", sa.DateTime(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=True),
        sa.Column("avatar_id", sa.Integer(), nullable=False),
        sa.Column("system_prompt", sa.String(length=10000), nullable=True),
        sa.Column("scenario", sa.JSON(), nullable=True),
        sa.Column("stt_phrase_list", sa.ARRAY(sa.String(length=255)), nullable=True),
        sa.Column("session_time", sa.Integer(), nullable=False),
        sa.Column("level", sa.String(length=20), nullable=False),
        sa.Column("avatar_mode", sa.String(length=20), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["avatar_id"], ["aiavatar.id"], name=op.f("fk__module__avatar_id__aiavatar")),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__module")),
    )
    op.create_table(
        "room",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("last_edited", sa.DateTime(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=True),
        sa.Column("metahuman", sa.String(length=50), nullable=False),
        sa.Column("background", sa.String(length=50), nullable=True),
        sa.Column("tts_server", sa.String(length=500), nullable=False),
        sa.Column("tts_port", sa.Integer(), nullable=False),
        sa.Column(
            "status",
            sa.Enum(
                "TO_SETUP",
                "CREATING",
                "STARTED",
                "READY",
                "IN_USE",
                "STOPPING",
                "TERMINATED",
                "FAILED",
                "INVALID",
                name="roomstatus",
            ),
            nullable=False,
        ),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("instance_id", sa.Integer(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["instance_id"], ["ueinstance.id"], name=op.f("fk__room__instance_id__ueinstance")),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], name=op.f("fk__room__user_id__user")),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__room")),
    )
    op.create_table(
        "clientmodulelink",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("last_edited", sa.DateTime(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("client_id", sa.Integer(), nullable=False),
        sa.Column("module_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["client_id"], ["client.id"], name=op.f("fk__clientmodulelink__client_id__client")),
        sa.ForeignKeyConstraint(["module_id"], ["module.id"], name=op.f("fk__clientmodulelink__module_id__module")),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__clientmodulelink")),
        sa.UniqueConstraint("client_id", "module_id", name="unique_client_module"),
    )
    op.create_table(
        "objective",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("last_edited", sa.DateTime(), nullable=False),
        sa.Column("title", sa.String(length=100), nullable=True),
        sa.Column("description", sa.String(length=500), nullable=True),
        sa.Column("expanded_objective", sa.String(length=2000), nullable=True),
        sa.Column("analysis_prompt", sa.String(length=10000), nullable=False),
        sa.Column("module_id", sa.Integer(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["module_id"], ["module.id"], name=op.f("fk__objective__module_id__module")),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__objective")),
    )
    op.create_table(
        "promptconsideration",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("last_edited", sa.DateTime(), nullable=False),
        sa.Column("consideration", sa.String(length=500), nullable=True),
        sa.Column("module_id", sa.Integer(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["module_id"], ["module.id"], name=op.f("fk__promptconsideration__module_id__module")),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__promptconsideration")),
    )
    op.create_table(
        "spar",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("last_edited", sa.DateTime(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("conversation", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column(
            "state",
            sa.Enum(
                "pending", "started", "in_progress", "half_done", "finished", "failed", "invalid", name="sparstate"
            ),
            nullable=True,
        ),
        sa.Column("total_session_duration", sa.Integer(), nullable=False),
        sa.Column("current_session_duration", sa.Integer(), nullable=False),
        sa.Column("user_audio_id", sa.UUID(), nullable=True),
        sa.Column("user_video_id", sa.UUID(), nullable=True),
        sa.Column("avatar_audio_id", sa.UUID(), nullable=True),
        sa.Column("avatar_video_id", sa.UUID(), nullable=True),
        sa.Column("merged_audio_id", sa.UUID(), nullable=True),
        sa.Column("merged_video_id", sa.UUID(), nullable=True),
        sa.Column(
            "video_merging_state",
            sa.Enum("started", "in_progress", "finished", "failed", "invalid", name="sparvideomergingstate"),
            nullable=True,
        ),
        sa.Column("video_merging_failure_reason", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("avatar_audio_timeline", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("user_audio_timeline", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("module_id", sa.Integer(), nullable=True),
        sa.Column("instance_id", sa.Integer(), nullable=True),
        sa.Column("room_id", sa.Integer(), nullable=True),
        sa.Column("socket_id", sa.String(length=255), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("rating", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["instance_id"], ["ueinstance.id"], name=op.f("fk__spar__instance_id__ueinstance")),
        sa.ForeignKeyConstraint(["module_id"], ["module.id"], name=op.f("fk__spar__module_id__module")),
        sa.ForeignKeyConstraint(["room_id"], ["room.id"], name=op.f("fk__spar__room_id__room")),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], name=op.f("fk__spar__user_id__user")),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__spar")),
    )
    op.create_table(
        "usermodulelink",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("last_edited", sa.DateTime(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("module_id", sa.Integer(), nullable=False),
        sa.Column("is_completed", sa.Boolean(), nullable=True),
        sa.Column("rating", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["module_id"], ["module.id"], name=op.f("fk__usermodulelink__module_id__module")),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], name=op.f("fk__usermodulelink__user_id__user")),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__usermodulelink")),
        sa.UniqueConstraint("user_id", "module_id", name="unique_user_module"),
    )
    op.create_table(
        "analysis",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("last_edited", sa.DateTime(), nullable=False),
        sa.Column(
            "state", sa.Enum("started", "in_progress", "finished", "failed", name="analysisstate"), nullable=True
        ),
        sa.Column("spar_id", sa.Integer(), nullable=False),
        sa.Column("text_analysis", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("audio_analysis", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("failure_reason", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("audio_conversation", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["spar_id"], ["spar.id"], name=op.f("fk__analysis__spar_id__spar")),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__analysis")),
    )
    op.create_table(
        "moduleobjectivelink",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("last_edited", sa.DateTime(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("module_id", sa.Integer(), nullable=True),
        sa.Column("objective_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["module_id"], ["module.id"], name=op.f("fk__moduleobjectivelink__module_id__module")),
        sa.ForeignKeyConstraint(
            ["objective_id"], ["objective.id"], name=op.f("fk__moduleobjectivelink__objective_id__objective")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__moduleobjectivelink")),
    )
    op.create_table(
        "modulepromptconsiderationlink",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("last_edited", sa.DateTime(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("module_id", sa.Integer(), nullable=True),
        sa.Column("promptconsideration_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["module_id"], ["module.id"], name=op.f("fk__modulepromptconsiderationlink__module_id__module")
        ),
        sa.ForeignKeyConstraint(
            ["promptconsideration_id"],
            ["promptconsideration.id"],
            name=op.f("fk__modulepromptconsiderationlink__promptconsideration_id__promptconsideration"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__modulepromptconsiderationlink")),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("modulepromptconsiderationlink")
    op.drop_table("moduleobjectivelink")
    op.drop_table("analysis")
    op.drop_table("usermodulelink")
    op.drop_table("spar")
    op.drop_table("promptconsideration")
    op.drop_table("objective")
    op.drop_table("clientmodulelink")
    op.drop_table("room")
    op.drop_table("module")
    op.drop_index(op.f("ix__user__username"), table_name="user")
    op.drop_table("user")
    op.drop_table("aiavatar")
    op.drop_table("ueinstance")
    op.drop_table("personality")
    op.drop_table("metahuman")
    op.drop_table("llminstance")
    op.drop_table("client")
    op.drop_table("bgscene")
    # ### end Alembic commands ###
